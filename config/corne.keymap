/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        CtrlShift {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <15 16>;
        };

        AltShift {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <14 15>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q           &kp W           &kp E             &kp R        &kp T        &kp Y        &kp U                &kp I              &kp O            &kp P                    &kp LEFT_BRACKET
&mo 4      &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LCTRL F  &kp G        &kp H        &mt LCTRL J          &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RIGHT_WIN SEMICOLON  &kp SQT
&kp LSHFT  &kp Z           &kp X           &kp C             &kp V        &kp B        &kp N        &mt RIGHT_BRACKET M  &kp COMMA          &kp DOT          &kp FSLH                 &kp ESC
                                           &lt 5 LEFT_WIN    &mo 1        &kp SPACE    &lt 4 ENTER  &mo 3                &mo 2
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp LEFT_BRACKET
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        fn {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PAGE_UP  &kp UP_ARROW    &kp PAGE_DOWN    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT     &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans       &trans          &trans           &trans  &trans
                        &trans  &trans  &trans    &trans  &trans       &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans            &trans  &kp LC(BACKSPACE)  &kp LC(DELETE)  &trans        &trans  &kp N7  &kp N8  &kp N9        &trans  &trans
&trans  &kp LS(LEFT_ALT)  &trans  &kp BACKSPACE      &kp DELETE      &kp INSERT    &trans  &kp N4  &kp N5  &kp NUMBER_6  &kp N0  &trans
&trans  &trans            &trans  &kp LC(C)          &kp LC(V)       &trans        &trans  &kp N1  &kp N2  &kp N3        &trans  &trans
                                  &trans             &trans          &trans        &trans  &trans  &trans
            >;
        };

        media {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3          &kp N4        &kp N5             &kp N6     &kp N7     &kp N8           &kp N9         &kp N0         &kp LEFT_BRACKET
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4       &kp LEFT   &kp DOWN   &kp UP           &kp RIGHT      &trans         &trans
&kp LSHFT   &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL     &kp PRINTSCREEN    &trans     &kp RCTRL  &kp RIGHT_SHIFT  &kp RIGHT_ALT  &kp RIGHT_WIN  &kp ESC
                                        &kp LGUI        &trans        &kp SPACE          &kp SPACE  &trans     &kp RALT
            >;
        };
    };
};
